@model TeleBilling_v02_.Models.CSVFile

@{
    ViewBag.Title = "FilesDetails";
}

<h2>ViewFilesDetails</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CSVFile</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @disabled = true } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Supplier", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Supplier.Name, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.SupplierName, @disabled = true } })
                @Html.ValidationMessageFor(model => model.Supplier.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        @* <div class="form-group">
                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TypeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.Label("Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fileType, new { htmlAttributes = new { @class = "form-control", @disabled = true } })
                    @Html.ValidationMessageFor(model => model.fileType, "", new { @class = "text-danger" })
                </div>
            </div>*@

    </div>
}

<div>
    @if (ViewBag.fileType == "InvoiceFile")
    {
        @Html.ActionLink("Back to List", "ViewInvoiceFiles")
    }
    else
    {
        @Html.ActionLink("Back to List", "ViewPriceFiles")
    }
</div>

@*@if (Model.BillableList.Count() > 0)
    {
        @Html.Partial("BillCsvFile", Model.BillableList);
    }*@

@if (Model.InvoiceRecords.Count() > 0)
{
    @Html.Partial("ViewInvoiceDetails", Model.InvoiceRecords);
}
else if (Model.ZoneRecords.Count() > 0)
{
    @Html.Partial("ViewZonesDetails", Model.ZoneRecords);
}
else
{
    <h4>No Records existed</h4>
}


